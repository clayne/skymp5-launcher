<Window x:Class="UpdatesClient.Modules.SelfUpdater.SplashScreen"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UpdatesClient.Modules.SelfUpdater"
        xmlns:ef="clr-namespace:UpdatesClient.Core.Helpers"
        xmlns:res="clr-namespace:UpdatesClient.Properties"
        mc:Ignorable="d"
        Title="{x:Static res:Resources.Title}" Height="600" Width="800" 
        ScrollViewer.VerticalScrollBarVisibility="Disabled"
        AllowsTransparency="True" Background="Transparent"
        WindowStyle="None" ResizeMode="NoResize" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ProgressBar.Background" Color="#FF2C2C2C"/>
        <SolidColorBrush x:Key="ProgressBar.Border" Color="#00FFFFFF"/>
        <CornerRadius x:Key="Radius" TopLeft="2.5" BottomLeft="2.5" TopRight="2.5" BottomRight="2.5" />
        <Style TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
            <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{DynamicResource Radius}"/>
                            <Rectangle x:Name="PART_Track"/>
                            <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                                <Border x:Name="Indicator" Background="{TemplateBinding Foreground}" CornerRadius="{DynamicResource Radius}" BorderThickness="0"/>
                                <Border x:Name="Animation" Background="{TemplateBinding Foreground}" CornerRadius="{DynamicResource Radius}" RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                </Border>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="true">
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FF8C8C8C"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFC0C0C0"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FF642727"/>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" OpacityMask="{TemplateBinding Background}" SnapsToDevicePixels="true" Margin="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Border BorderThickness="0,0,0,0" CornerRadius="25" >
        <Border.Background>
            <ImageBrush ImageSource="/UpdatesClient;component/Assets/Images/SplashBackground/Background1.jpg"/>
        </Border.Background>
        <Grid>
            <Image HorizontalAlignment="Left" Height="34" Margin="20,17,0,0" VerticalAlignment="Top" Width="51" Source="{StaticResource logo}"/>
            <Button HorizontalAlignment="Right" Margin="0,22,20,0" VerticalAlignment="Top" Width="25" Height="25" Padding="5" BorderBrush="#FF8C8C8C" Click="Button_Click">
                <Button.Background>
                    <ImageBrush ImageSource="{StaticResource close}" Stretch="Uniform"/>
                </Button.Background>
            </Button>
            <Button HorizontalAlignment="Right" Margin="0,22,58,0" VerticalAlignment="Top" Width="24" Height="25" Padding="5" BorderBrush="#FF8C8C8C" Click="Button_Click_1">
                <Button.Background>
                    <ImageBrush ImageSource="{StaticResource minimize}" Stretch="Uniform"/>
                </Button.Background>
            </Button>

            <ProgressBar Name="progBar" Minimum="0" Maximum="1" Height="5" VerticalAlignment="Bottom" Foreground="White" Margin="33,0,33,33" BorderBrush="{x:Null}" Background="#FF2C2C2C" IsIndeterminate="True"/>
            <TextBlock x:Name="Status" Margin="33,0,0,58" TextWrapping="Wrap" Text="{x:Static res:Resources.CheckSelfUpdate}" Foreground="White" VerticalAlignment="Bottom" FontWeight="Bold" TextAlignment="Center" FontFamily="/UpdatesClient;component/Assets/Fonts/#Gilroy" HorizontalAlignment="Left" FontSize="16" />
        </Grid>
    </Border>
</Window>
